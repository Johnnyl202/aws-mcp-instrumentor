2025-06-24 10:47:20,787 - INFO - root=EmptyResult(meta=None, content=[{'type': 'text', 'text': 'Application Signals Services (1 total):\n\n• Service: mcp-appsignals-server\n  Type: Service\n  Key Attributes:\n    Environment: development\n    Name: mcp-appsignals-server\n    Type: Service\n\n'}], isError=False)
2025-06-24 10:48:49,623 - INFO - root=EmptyResult(meta=None, content=[{'type': 'text', 'text': "Error executing tool list_application_signals_services: cannot access local variable 'logger' where it is not associated with a value"}], isError=True)
2025-06-24 10:51:42,234 - INFO - root=EmptyResult(meta=None, content=[{'type': 'text', 'text': 'Application Signals Services (1 total):\n\n• Service: mcp-appsignals-server\n  Type: Service\n  Key Attributes:\n    Environment: development\n    Name: mcp-appsignals-server\n    Type: Service\n\n'}], isError=False)
2025-06-24 10:52:28,661 - INFO - root=EmptyResult(meta=None, content=[{'type': 'text', 'text': 'Application Signals Services (1 total):\n\n• Service: mcp-appsignals-server\n  Type: Service\n  Key Attributes:\n    Environment: development\n    Name: mcp-appsignals-server\n    Type: Service\n\n'}], isError=False)
2025-06-24 10:56:24,437 - INFO - root=EmptyResult(meta=None, content=[{'type': 'text', 'text': 'Application Signals Services (17 total):\n\n• Service: customers-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: customers-service-java\n    Type: Service\n\n• Service: payment-service-dotnet\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: payment-service-dotnet\n    Type: Service\n\n• Service: FeedbackGateway\n  Type: Service\n  Key Attributes:\n    Environment: api-gateway:preprod\n    Name: FeedbackGateway\n    Type: Service\n\n• Service: nginx-proxy\n  Type: Service\n  Key Attributes:\n    Environment: generic:default\n    Name: nginx-proxy\n    Type: Service\n\n• Service: billing-service-python\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: billing-service-python\n    Type: Service\n\n• Service: insurance-service-python\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: insurance-service-python\n    Type: Service\n\n• Service: nutrition-service-nodejs\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: nutrition-service-nodejs\n    Type: Service\n\n• Service: vets-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: vets-service-java\n    Type: Service\n\n• Service: audit-service\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: audit-service\n    Type: Service\n\n• Service: pet-clinic-frontend-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: pet-clinic-frontend-java\n    Type: Service\n\n• Service: appointment-service-list\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: appointment-service-list\n    Type: Service\n\n• Service: visits-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: visits-service-java\n    Type: Service\n\n• Service: appointment-service-gateway\n  Type: Service\n  Key Attributes:\n    Environment: api-gateway:prod\n    Name: appointment-service-gateway\n    Type: Service\n\n• Service: FeedbackReceiver\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: FeedbackReceiver\n    Type: Service\n\n• Service: appointment-service-get\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: appointment-service-get\n    Type: Service\n\n• Service: TicketingSystem\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: TicketingSystem\n    Type: Service\n\n• Service: mcp-appsignals-server\n  Type: Service\n  Key Attributes:\n    Environment: development\n    Name: mcp-appsignals-server\n    Type: Service\n\n'}], isError=False)
2025-06-24 13:15:47,466 - INFO - root=EmptyResult(meta=None, content=[{'type': 'text', 'text': 'Application Signals Services (17 total):\n\n• Service: customers-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: customers-service-java\n    Type: Service\n\n• Service: payment-service-dotnet\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: payment-service-dotnet\n    Type: Service\n\n• Service: FeedbackGateway\n  Type: Service\n  Key Attributes:\n    Environment: api-gateway:preprod\n    Name: FeedbackGateway\n    Type: Service\n\n• Service: nginx-proxy\n  Type: Service\n  Key Attributes:\n    Environment: generic:default\n    Name: nginx-proxy\n    Type: Service\n\n• Service: billing-service-python\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: billing-service-python\n    Type: Service\n\n• Service: insurance-service-python\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: insurance-service-python\n    Type: Service\n\n• Service: vets-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: vets-service-java\n    Type: Service\n\n• Service: audit-service\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: audit-service\n    Type: Service\n\n• Service: pet-clinic-frontend-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: pet-clinic-frontend-java\n    Type: Service\n\n• Service: appointment-service-list\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: appointment-service-list\n    Type: Service\n\n• Service: visits-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: visits-service-java\n    Type: Service\n\n• Service: appointment-service-gateway\n  Type: Service\n  Key Attributes:\n    Environment: api-gateway:prod\n    Name: appointment-service-gateway\n    Type: Service\n\n• Service: FeedbackReceiver\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: FeedbackReceiver\n    Type: Service\n\n• Service: appointment-service-get\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: appointment-service-get\n    Type: Service\n\n• Service: TicketingSystem\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: TicketingSystem\n    Type: Service\n\n• Service: nutrition-service-nodejs\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: nutrition-service-nodejs\n    Type: Service\n\n• Service: mcp-appsignals-server\n  Type: Service\n  Key Attributes:\n    Environment: development\n    Name: mcp-appsignals-server\n    Type: Service\n\n'}], isError=False)
2025-06-24 13:15:47,475 - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2025-06-24 13:19:24,054 - INFO - root=EmptyResult(meta=None, content=[{'type': 'text', 'text': 'Application Signals Services (18 total):\n\n• Service: customers-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: customers-service-java\n    Type: Service\n\n• Service: payment-service-dotnet\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: payment-service-dotnet\n    Type: Service\n\n• Service: FeedbackGateway\n  Type: Service\n  Key Attributes:\n    Environment: api-gateway:preprod\n    Name: FeedbackGateway\n    Type: Service\n\n• Service: nginx-proxy\n  Type: Service\n  Key Attributes:\n    Environment: generic:default\n    Name: nginx-proxy\n    Type: Service\n\n• Service: billing-service-python\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: billing-service-python\n    Type: Service\n\n• Service: insurance-service-python\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: insurance-service-python\n    Type: Service\n\n• Service: unknown_service\n  Type: Service\n  Key Attributes:\n    Environment: generic:default\n    Name: unknown_service\n    Type: Service\n\n• Service: vets-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: vets-service-java\n    Type: Service\n\n• Service: audit-service\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: audit-service\n    Type: Service\n\n• Service: pet-clinic-frontend-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: pet-clinic-frontend-java\n    Type: Service\n\n• Service: appointment-service-list\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: appointment-service-list\n    Type: Service\n\n• Service: visits-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: visits-service-java\n    Type: Service\n\n• Service: appointment-service-gateway\n  Type: Service\n  Key Attributes:\n    Environment: api-gateway:prod\n    Name: appointment-service-gateway\n    Type: Service\n\n• Service: FeedbackReceiver\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: FeedbackReceiver\n    Type: Service\n\n• Service: appointment-service-get\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: appointment-service-get\n    Type: Service\n\n• Service: TicketingSystem\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: TicketingSystem\n    Type: Service\n\n• Service: nutrition-service-nodejs\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: nutrition-service-nodejs\n    Type: Service\n\n• Service: mcp-appsignals-server\n  Type: Service\n  Key Attributes:\n    Environment: development\n    Name: mcp-appsignals-server\n    Type: Service\n\n'}], isError=False)
2025-06-24 13:19:24,068 - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2025-06-24 13:22:40,502 - INFO - root=EmptyResult(meta=None, content=[{'type': 'text', 'text': 'Application Signals Services (18 total):\n\n• Service: customers-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: customers-service-java\n    Type: Service\n\n• Service: payment-service-dotnet\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: payment-service-dotnet\n    Type: Service\n\n• Service: FeedbackGateway\n  Type: Service\n  Key Attributes:\n    Environment: api-gateway:preprod\n    Name: FeedbackGateway\n    Type: Service\n\n• Service: nginx-proxy\n  Type: Service\n  Key Attributes:\n    Environment: generic:default\n    Name: nginx-proxy\n    Type: Service\n\n• Service: billing-service-python\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: billing-service-python\n    Type: Service\n\n• Service: insurance-service-python\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: insurance-service-python\n    Type: Service\n\n• Service: unknown_service\n  Type: Service\n  Key Attributes:\n    Environment: generic:default\n    Name: unknown_service\n    Type: Service\n\n• Service: vets-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: vets-service-java\n    Type: Service\n\n• Service: audit-service\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: audit-service\n    Type: Service\n\n• Service: pet-clinic-frontend-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: pet-clinic-frontend-java\n    Type: Service\n\n• Service: appointment-service-list\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: appointment-service-list\n    Type: Service\n\n• Service: visits-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: visits-service-java\n    Type: Service\n\n• Service: appointment-service-gateway\n  Type: Service\n  Key Attributes:\n    Environment: api-gateway:prod\n    Name: appointment-service-gateway\n    Type: Service\n\n• Service: FeedbackReceiver\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: FeedbackReceiver\n    Type: Service\n\n• Service: appointment-service-get\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: appointment-service-get\n    Type: Service\n\n• Service: TicketingSystem\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: TicketingSystem\n    Type: Service\n\n• Service: nutrition-service-nodejs\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: nutrition-service-nodejs\n    Type: Service\n\n• Service: mcp-appsignals-server\n  Type: Service\n  Key Attributes:\n    Environment: development\n    Name: mcp-appsignals-server\n    Type: Service\n\n'}], isError=False)
2025-06-24 13:22:40,516 - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2025-06-24 13:33:59,921 - INFO - root=EmptyResult(meta=None, content=[{'type': 'text', 'text': 'Application Signals Services (18 total):\n\n• Service: customers-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: customers-service-java\n    Type: Service\n\n• Service: payment-service-dotnet\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: payment-service-dotnet\n    Type: Service\n\n• Service: FeedbackGateway\n  Type: Service\n  Key Attributes:\n    Environment: api-gateway:preprod\n    Name: FeedbackGateway\n    Type: Service\n\n• Service: nginx-proxy\n  Type: Service\n  Key Attributes:\n    Environment: generic:default\n    Name: nginx-proxy\n    Type: Service\n\n• Service: billing-service-python\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: billing-service-python\n    Type: Service\n\n• Service: insurance-service-python\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: insurance-service-python\n    Type: Service\n\n• Service: unknown_service\n  Type: Service\n  Key Attributes:\n    Environment: generic:default\n    Name: unknown_service\n    Type: Service\n\n• Service: vets-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: vets-service-java\n    Type: Service\n\n• Service: audit-service\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: audit-service\n    Type: Service\n\n• Service: pet-clinic-frontend-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: pet-clinic-frontend-java\n    Type: Service\n\n• Service: appointment-service-list\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: appointment-service-list\n    Type: Service\n\n• Service: visits-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: visits-service-java\n    Type: Service\n\n• Service: appointment-service-gateway\n  Type: Service\n  Key Attributes:\n    Environment: api-gateway:prod\n    Name: appointment-service-gateway\n    Type: Service\n\n• Service: FeedbackReceiver\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: FeedbackReceiver\n    Type: Service\n\n• Service: appointment-service-get\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: appointment-service-get\n    Type: Service\n\n• Service: TicketingSystem\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: TicketingSystem\n    Type: Service\n\n• Service: nutrition-service-nodejs\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: nutrition-service-nodejs\n    Type: Service\n\n• Service: mcp-appsignals-server\n  Type: Service\n  Key Attributes:\n    Environment: development\n    Name: mcp-appsignals-server\n    Type: Service\n\n'}], isError=False)
2025-06-24 13:33:59,935 - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2025-06-24 13:40:06,034 - INFO - root=EmptyResult(meta=None, content=[{'type': 'text', 'text': 'Application Signals Services (18 total):\n\n• Service: customers-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: customers-service-java\n    Type: Service\n\n• Service: payment-service-dotnet\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: payment-service-dotnet\n    Type: Service\n\n• Service: FeedbackGateway\n  Type: Service\n  Key Attributes:\n    Environment: api-gateway:preprod\n    Name: FeedbackGateway\n    Type: Service\n\n• Service: nginx-proxy\n  Type: Service\n  Key Attributes:\n    Environment: generic:default\n    Name: nginx-proxy\n    Type: Service\n\n• Service: billing-service-python\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: billing-service-python\n    Type: Service\n\n• Service: insurance-service-python\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: insurance-service-python\n    Type: Service\n\n• Service: unknown_service\n  Type: Service\n  Key Attributes:\n    Environment: generic:default\n    Name: unknown_service\n    Type: Service\n\n• Service: vets-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: vets-service-java\n    Type: Service\n\n• Service: audit-service\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: audit-service\n    Type: Service\n\n• Service: pet-clinic-frontend-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: pet-clinic-frontend-java\n    Type: Service\n\n• Service: appointment-service-list\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: appointment-service-list\n    Type: Service\n\n• Service: visits-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: visits-service-java\n    Type: Service\n\n• Service: appointment-service-gateway\n  Type: Service\n  Key Attributes:\n    Environment: api-gateway:prod\n    Name: appointment-service-gateway\n    Type: Service\n\n• Service: FeedbackReceiver\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: FeedbackReceiver\n    Type: Service\n\n• Service: appointment-service-get\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: appointment-service-get\n    Type: Service\n\n• Service: TicketingSystem\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: TicketingSystem\n    Type: Service\n\n• Service: nutrition-service-nodejs\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: nutrition-service-nodejs\n    Type: Service\n\n• Service: mcp-appsignals-server\n  Type: Service\n  Key Attributes:\n    Environment: development\n    Name: mcp-appsignals-server\n    Type: Service\n\n'}], isError=False)
2025-06-24 13:40:06,043 - INFO - Found credentials in shared credentials file: ~/.aws/credentials
2025-06-24 13:58:06,241 - INFO - root=EmptyResult(meta=None, content=[{'type': 'text', 'text': "'TracerProvider' object has no attribute 'start_as_current_span'"}], isError=True)
2025-06-24 14:00:44,429 - INFO - root=EmptyResult(meta=None, content=[{'type': 'text', 'text': 'Application Signals Services (18 total):\n\n• Service: customers-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: customers-service-java\n    Type: Service\n\n• Service: payment-service-dotnet\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: payment-service-dotnet\n    Type: Service\n\n• Service: FeedbackGateway\n  Type: Service\n  Key Attributes:\n    Environment: api-gateway:preprod\n    Name: FeedbackGateway\n    Type: Service\n\n• Service: nginx-proxy\n  Type: Service\n  Key Attributes:\n    Environment: generic:default\n    Name: nginx-proxy\n    Type: Service\n\n• Service: billing-service-python\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: billing-service-python\n    Type: Service\n\n• Service: insurance-service-python\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: insurance-service-python\n    Type: Service\n\n• Service: vets-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: vets-service-java\n    Type: Service\n\n• Service: audit-service\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: audit-service\n    Type: Service\n\n• Service: pet-clinic-frontend-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: pet-clinic-frontend-java\n    Type: Service\n\n• Service: appointment-service-list\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: appointment-service-list\n    Type: Service\n\n• Service: visits-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: visits-service-java\n    Type: Service\n\n• Service: appointment-service-gateway\n  Type: Service\n  Key Attributes:\n    Environment: api-gateway:prod\n    Name: appointment-service-gateway\n    Type: Service\n\n• Service: FeedbackReceiver\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: FeedbackReceiver\n    Type: Service\n\n• Service: appointment-service-get\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: appointment-service-get\n    Type: Service\n\n• Service: TicketingSystem\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: TicketingSystem\n    Type: Service\n\n• Service: unknown_service\n  Type: Service\n  Key Attributes:\n    Environment: generic:default\n    Name: unknown_service\n    Type: Service\n\n• Service: nutrition-service-nodejs\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: nutrition-service-nodejs\n    Type: Service\n\n• Service: mcp-appsignals-server\n  Type: Service\n  Key Attributes:\n    Environment: development\n    Name: mcp-appsignals-server\n    Type: Service\n\n'}], isError=False)
2025-06-24 14:01:31,260 - INFO - root=EmptyResult(meta=None, content=[{'type': 'text', 'text': 'Application Signals Services (18 total):\n\n• Service: customers-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: customers-service-java\n    Type: Service\n\n• Service: payment-service-dotnet\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: payment-service-dotnet\n    Type: Service\n\n• Service: FeedbackGateway\n  Type: Service\n  Key Attributes:\n    Environment: api-gateway:preprod\n    Name: FeedbackGateway\n    Type: Service\n\n• Service: nginx-proxy\n  Type: Service\n  Key Attributes:\n    Environment: generic:default\n    Name: nginx-proxy\n    Type: Service\n\n• Service: billing-service-python\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: billing-service-python\n    Type: Service\n\n• Service: insurance-service-python\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: insurance-service-python\n    Type: Service\n\n• Service: vets-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: vets-service-java\n    Type: Service\n\n• Service: audit-service\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: audit-service\n    Type: Service\n\n• Service: pet-clinic-frontend-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: pet-clinic-frontend-java\n    Type: Service\n\n• Service: appointment-service-list\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: appointment-service-list\n    Type: Service\n\n• Service: visits-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: visits-service-java\n    Type: Service\n\n• Service: appointment-service-gateway\n  Type: Service\n  Key Attributes:\n    Environment: api-gateway:prod\n    Name: appointment-service-gateway\n    Type: Service\n\n• Service: FeedbackReceiver\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: FeedbackReceiver\n    Type: Service\n\n• Service: appointment-service-get\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: appointment-service-get\n    Type: Service\n\n• Service: TicketingSystem\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: TicketingSystem\n    Type: Service\n\n• Service: unknown_service\n  Type: Service\n  Key Attributes:\n    Environment: generic:default\n    Name: unknown_service\n    Type: Service\n\n• Service: nutrition-service-nodejs\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: nutrition-service-nodejs\n    Type: Service\n\n• Service: mcp-appsignals-server\n  Type: Service\n  Key Attributes:\n    Environment: development\n    Name: mcp-appsignals-server\n    Type: Service\n\n'}], isError=False)
2025-06-24 14:03:52,804 - INFO - root=EmptyResult(meta=None, content=[{'type': 'text', 'text': 'Application Signals Services (18 total):\n\n• Service: customers-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: customers-service-java\n    Type: Service\n\n• Service: payment-service-dotnet\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: payment-service-dotnet\n    Type: Service\n\n• Service: FeedbackGateway\n  Type: Service\n  Key Attributes:\n    Environment: api-gateway:preprod\n    Name: FeedbackGateway\n    Type: Service\n\n• Service: nginx-proxy\n  Type: Service\n  Key Attributes:\n    Environment: generic:default\n    Name: nginx-proxy\n    Type: Service\n\n• Service: billing-service-python\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: billing-service-python\n    Type: Service\n\n• Service: insurance-service-python\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: insurance-service-python\n    Type: Service\n\n• Service: vets-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: vets-service-java\n    Type: Service\n\n• Service: audit-service\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: audit-service\n    Type: Service\n\n• Service: pet-clinic-frontend-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: pet-clinic-frontend-java\n    Type: Service\n\n• Service: appointment-service-list\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: appointment-service-list\n    Type: Service\n\n• Service: visits-service-java\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: visits-service-java\n    Type: Service\n\n• Service: appointment-service-gateway\n  Type: Service\n  Key Attributes:\n    Environment: api-gateway:prod\n    Name: appointment-service-gateway\n    Type: Service\n\n• Service: FeedbackReceiver\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: FeedbackReceiver\n    Type: Service\n\n• Service: appointment-service-get\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: appointment-service-get\n    Type: Service\n\n• Service: TicketingSystem\n  Type: Service\n  Key Attributes:\n    Environment: lambda:default\n    Name: TicketingSystem\n    Type: Service\n\n• Service: unknown_service\n  Type: Service\n  Key Attributes:\n    Environment: generic:default\n    Name: unknown_service\n    Type: Service\n\n• Service: nutrition-service-nodejs\n  Type: Service\n  Key Attributes:\n    Environment: eks:demo/default\n    Name: nutrition-service-nodejs\n    Type: Service\n\n• Service: mcp-appsignals-server\n  Type: Service\n  Key Attributes:\n    Environment: development\n    Name: mcp-appsignals-server\n    Type: Service\n\n'}], isError=False)
